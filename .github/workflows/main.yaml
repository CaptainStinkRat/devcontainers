name: devcontainer tester

on:
  push:
    paths:
      - '.devcontainer/**'
jobs:
  devcontainerDryRun:
    runs-on: ubuntu-latest
    outputs:
      image_name : ${{ steps.prepare_meta.outputs.image_name }}
    steps:
      - name: Checkout devcontainer.json
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare metadata for image tagging
        id: prepare_meta
        run: |
          IMAGE_NAME="captainstinkrat/devcontainerdryrun"
          echo "image_name=${IMAGE_NAME}" >> "$GITHUB_OUTPUT"
      - name: Build dev container
        uses: devcontainers/ci@v0.3
        with:
          devcontainerPath: .devcontainer
          imageName: captainstinkrat/devcontainerdryrun
          imageTag : ${{ github.sha }}
          push: never
      - name : Devcontainer dry run
        run : echo "Dry run succesful"
  
  devcontainerScriptBuilding:
    runs-on: ubuntu-latest
    needs: devcontainerDryRun
    if: success()
    steps:
      - name: Running commands in Dev Container
        uses: devcontainers/ci/actions/container-run@v0.3
        with:
          imageName: captainstinkrat/devcontainerdryrun
          runArgs: |
            -v ${{ github.workspace }}:/workspace
          command: |
            
            python3 -m venv venv
            source venv/bin/activate
            pip install -r /workspace/devcontainers/requirements.txt && python3 /workspace/devcontainers/test.py
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push container
        id: devcontainer-push
        uses: devcontainers/ci@v0.3
        with:
          imageName : ${{ needs.devcontainerDryRun.outputs.image_name }}
          push: always
      
